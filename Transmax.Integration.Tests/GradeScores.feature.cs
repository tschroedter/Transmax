// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.2.0.0
//      SpecFlow Generator Version:2.2.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

#region Designer generated code

using TechTalk.SpecFlow;

#pragma warning disable
namespace Transmax.Integration.Tests
{
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow",
        "2.2.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("GradeScores")]
    public partial class GradeScoresFeature
    {
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }

        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }

        private TechTalk.SpecFlow.ITestRunner testRunner;

        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            var featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"),
                                                                "GradeScores",
                                                                null,
                                                                ProgrammingLanguage.CSharp,
                                                                ( ( string[] ) ( null ) ));
            testRunner.OnFeatureStart(featureInfo);
        }

        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }

        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }

        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }

        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Given Example")]
        public virtual void GivenExample()
        {
            var scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Given Example",
                                                                  ( ( string[] ) ( null ) ));
#line 6
            this.ScenarioSetup(scenarioInfo);
#line hidden
            var table1 = new TechTalk.SpecFlow.Table(new string[]
                                                     {
                                                         "FirstName",
                                                         "Surname",
                                                         "Score"
                                                     });
            table1.AddRow(new string[]
                          {
                              "TED",
                              "BUNDY",
                              "88"
                          });
            table1.AddRow(new string[]
                          {
                              "ALLAN",
                              "SMITH",
                              "85"
                          });
            table1.AddRow(new string[]
                          {
                              "MADISON",
                              "KING",
                              "83"
                          });
            table1.AddRow(new string[]
                          {
                              "FRANCIS",
                              "SMITH",
                              "85"
                          });
#line 7
            testRunner.Given("Given the source file contains the following:",
                             ( ( string ) ( null ) ),
                             table1,
                             "Given ");
#line 13
            testRunner.When("the file is graded",
                            ( ( string ) ( null ) ),
                            ( ( TechTalk.SpecFlow.Table ) ( null ) ),
                            "When ");
#line hidden
            var table2 = new TechTalk.SpecFlow.Table(new string[]
                                                     {
                                                         "Surname",
                                                         "FirstName",
                                                         "Score"
                                                     });
            table2.AddRow(new string[]
                          {
                              "BUNDY",
                              "TED",
                              "88"
                          });
            table2.AddRow(new string[]
                          {
                              "SMITH",
                              "ALLAN",
                              "85"
                          });
            table2.AddRow(new string[]
                          {
                              "SMITH",
                              "FRANCIS",
                              "85"
                          });
            table2.AddRow(new string[]
                          {
                              "KING",
                              "MADISON",
                              "83"
                          });
#line 14
            testRunner.Then("the destination file should contain the following:",
                            ( ( string ) ( null ) ),
                            table2,
                            "Then ");
#line hidden
            this.ScenarioCleanup();
        }

        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Given Example With One Score Invalid")]
        public virtual void GivenExampleWithOneScoreInvalid()
        {
            var scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Given Example With One Score Invalid",
                                                                  ( ( string[] ) ( null ) ));
#line 53
            this.ScenarioSetup(scenarioInfo);
#line hidden
            var table7 = new TechTalk.SpecFlow.Table(new string[]
                                                     {
                                                         "FirstName",
                                                         "Surname",
                                                         "Score"
                                                     });
            table7.AddRow(new string[]
                          {
                              "Ted",
                              "Bundy",
                              "88"
                          });
            table7.AddRow(new string[]
                          {
                              "Allan",
                              "Smith",
                              "85"
                          });
            table7.AddRow(new string[]
                          {
                              "Madison",
                              "King",
                              "83"
                          });
            table7.AddRow(new string[]
                          {
                              "Francis",
                              "Smith",
                              "85"
                          });
            table7.AddRow(new string[]
                          {
                              "Joe",
                              "Cool",
                              "abcde"
                          });
#line 54
            testRunner.Given("Given the source file contains the following:",
                             ( ( string ) ( null ) ),
                             table7,
                             "Given ");
#line 61
            testRunner.When("the file is graded",
                            ( ( string ) ( null ) ),
                            ( ( TechTalk.SpecFlow.Table ) ( null ) ),
                            "When ");
#line hidden
            var table8 = new TechTalk.SpecFlow.Table(new string[]
                                                     {
                                                         "Surname",
                                                         "FirstName",
                                                         "Score"
                                                     });
            table8.AddRow(new string[]
                          {
                              "Bundy",
                              "Ted",
                              "88"
                          });
            table8.AddRow(new string[]
                          {
                              "Smith",
                              "Allan",
                              "85"
                          });
            table8.AddRow(new string[]
                          {
                              "Smith",
                              "Francis",
                              "85"
                          });
            table8.AddRow(new string[]
                          {
                              "King",
                              "Madison",
                              "83"
                          });
            table8.AddRow(new string[]
                          {
                              "Cool",
                              "Joe",
                              "-2147483648"
                          });
#line 62
            testRunner.Then("the destination file should contain the following:",
                            ( ( string ) ( null ) ),
                            table8,
                            "Then ");
#line hidden
            this.ScenarioCleanup();
        }

        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Given Example With One Score Missing")]
        public virtual void GivenExampleWithOneScoreMissing()
        {
            var scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Given Example With One Score Missing",
                                                                  ( ( string[] ) ( null ) ));
#line 36
            this.ScenarioSetup(scenarioInfo);
#line hidden
            var table5 = new TechTalk.SpecFlow.Table(new string[]
                                                     {
                                                         "FirstName",
                                                         "Surname",
                                                         "Score"
                                                     });
            table5.AddRow(new string[]
                          {
                              "Ted",
                              "Bundy",
                              "88"
                          });
            table5.AddRow(new string[]
                          {
                              "Allan",
                              "Smith",
                              "85"
                          });
            table5.AddRow(new string[]
                          {
                              "Madison",
                              "King",
                              "83"
                          });
            table5.AddRow(new string[]
                          {
                              "Francis",
                              "Smith",
                              "85"
                          });
            table5.AddRow(new string[]
                          {
                              "Joe",
                              "Cool",
                              ""
                          });
#line 37
            testRunner.Given("Given the source file contains the following:",
                             ( ( string ) ( null ) ),
                             table5,
                             "Given ");
#line 44
            testRunner.When("the file is graded",
                            ( ( string ) ( null ) ),
                            ( ( TechTalk.SpecFlow.Table ) ( null ) ),
                            "When ");
#line hidden
            var table6 = new TechTalk.SpecFlow.Table(new string[]
                                                     {
                                                         "Surname",
                                                         "FirstName",
                                                         "Score"
                                                     });
            table6.AddRow(new string[]
                          {
                              "Bundy",
                              "Ted",
                              "88"
                          });
            table6.AddRow(new string[]
                          {
                              "Smith",
                              "Allan",
                              "85"
                          });
            table6.AddRow(new string[]
                          {
                              "Smith",
                              "Francis",
                              "85"
                          });
            table6.AddRow(new string[]
                          {
                              "King",
                              "Madison",
                              "83"
                          });
            table6.AddRow(new string[]
                          {
                              "Cool",
                              "Joe",
                              "-2147483648"
                          });
#line 45
            testRunner.Then("the destination file should contain the following:",
                            ( ( string ) ( null ) ),
                            table6,
                            "Then ");
#line hidden
            this.ScenarioCleanup();
        }

        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Given Example With Upper And Lower Case")]
        public virtual void GivenExampleWithUpperAndLowerCase()
        {
            var scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Given Example With Upper And Lower Case",
                                                                  ( ( string[] ) ( null ) ));
#line 21
            this.ScenarioSetup(scenarioInfo);
#line hidden
            var table3 = new TechTalk.SpecFlow.Table(new string[]
                                                     {
                                                         "FirstName",
                                                         "Surname",
                                                         "Score"
                                                     });
            table3.AddRow(new string[]
                          {
                              "Ted",
                              "Bundy",
                              "88"
                          });
            table3.AddRow(new string[]
                          {
                              "Allan",
                              "Smith",
                              "85"
                          });
            table3.AddRow(new string[]
                          {
                              "Madison",
                              "King",
                              "83"
                          });
            table3.AddRow(new string[]
                          {
                              "Francis",
                              "Smith",
                              "85"
                          });
#line 22
            testRunner.Given("Given the source file contains the following:",
                             ( ( string ) ( null ) ),
                             table3,
                             "Given ");
#line 28
            testRunner.When("the file is graded",
                            ( ( string ) ( null ) ),
                            ( ( TechTalk.SpecFlow.Table ) ( null ) ),
                            "When ");
#line hidden
            var table4 = new TechTalk.SpecFlow.Table(new string[]
                                                     {
                                                         "Surname",
                                                         "FirstName",
                                                         "Score"
                                                     });
            table4.AddRow(new string[]
                          {
                              "Bundy",
                              "Ted",
                              "88"
                          });
            table4.AddRow(new string[]
                          {
                              "Smith",
                              "Allan",
                              "85"
                          });
            table4.AddRow(new string[]
                          {
                              "Smith",
                              "Francis",
                              "85"
                          });
            table4.AddRow(new string[]
                          {
                              "King",
                              "Madison",
                              "83"
                          });
#line 29
            testRunner.Then("the destination file should contain the following:",
                            ( ( string ) ( null ) ),
                            table4,
                            "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore

#endregion